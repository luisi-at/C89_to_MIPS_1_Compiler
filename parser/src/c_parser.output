Nonterminals useless in grammar

   unary_operator
   constant_expression
   identifier_list
   type_specifier


Terminals unused in grammar

   SIZEOF
   TYPEDEF
   EXTERN
   STATIC
   AUTO
   REGISTER
   CHAR
   SHORT
   INT
   LONG
   SIGNED
   UNSIGNED
   FLOAT
   DOUBLE
   CONST
   VOLATILE
   VOID
   STRUCT
   UNION
   ENUM
   ELLIPSIS
   CASE
   DEFAULT
   IF
   ELSE
   SWITCH
   WHILE
   DO
   FOR
   GOTO
   CONTINUE
   BREAK
   RETURN
   '~'
   '!'


Rules useless in grammar

   60 unary_operator: '&'
   61               | '*'
   62               | '+'
   63               | '-'
   64               | '~'
   65               | '!'

   66 constant_expression: conditional_expression


Grammar

    0 $accept: ROOT $end

    1 ROOT: this_unit

    2 primary_expression: IDENTIFIER
    3                   | CONSTANT
    4                   | STRING_LITERAL

    5 postfix_expression: primary_expression
    6                   | postfix_expression '(' ')'
    7                   | postfix_expression '.' IDENTIFIER
    8                   | postfix_expression PTR_OP IDENTIFIER
    9                   | postfix_expression INC_OP
   10                   | postfix_expression DEC_OP

   11 unary_expression: postfix_expression
   12                 | INC_OP unary_expression
   13                 | DEC_OP unary_expression

   14 multiplicative_expression: unary_expression
   15                          | multiplicative_expression '*' unary_expression
   16                          | multiplicative_expression '/' unary_expression
   17                          | multiplicative_expression '%' unary_expression

   18 additive_expression: multiplicative_expression
   19                    | additive_expression '+' multiplicative_expression
   20                    | additive_expression '-' multiplicative_expression

   21 shift_expression: additive_expression
   22                 | shift_expression LEFT_OP additive_expression
   23                 | shift_expression RIGHT_OP additive_expression

   24 relational_expression: shift_expression
   25                      | relational_expression '<' shift_expression
   26                      | relational_expression '>' shift_expression
   27                      | relational_expression LE_OP shift_expression
   28                      | relational_expression GE_OP shift_expression

   29 equality_expression: relational_expression
   30                    | equality_expression EQ_OP relational_expression
   31                    | equality_expression NE_OP relational_expression

   32 and_expression: equality_expression
   33               | and_expression '&' equality_expression

   34 eor_expression: and_expression
   35               | eor_expression '^' and_expression

   36 or_expression: eor_expression
   37              | or_expression '|' eor_expression

   38 logical_and_expression: or_expression
   39                       | logical_and_expression AND_OP or_expression

   40 logical_or_expression: logical_and_expression
   41                      | logical_or_expression OR_OP logical_and_expression

   42 conditional_expression: logical_or_expression
   43                       | logical_or_expression '?' expression ':' conditional_expression

   44 assignment_expression: conditional_expression
   45                      | unary_expression assignment_operator assignment_expression

   46 assignment_operator: '='
   47                    | MUL_ASSIGN
   48                    | DIV_ASSIGN
   49                    | MOD_ASSIGN
   50                    | ADD_ASSIGN
   51                    | SUB_ASSIGN
   52                    | LEFT_ASSIGN
   53                    | RIGHT_ASSIGN
   54                    | AND_ASSIGN
   55                    | OR_ASSIGN
   56                    | XOR_ASSIGN

   57 expression: assignment_expression
   58           | expression ',' assignment_expression

   59 this_unit: expression


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'%' (37) 17
'&' (38) 33
'(' (40) 6
')' (41) 6
'*' (42) 15
'+' (43) 19
',' (44) 58
'-' (45) 20
'.' (46) 7
'/' (47) 16
':' (58) 43
'<' (60) 25
'=' (61) 46
'>' (62) 26
'?' (63) 43
'^' (94) 35
'|' (124) 37
'~' (126)
error (256)
IDENTIFIER (258) 2 7 8
CONSTANT (259) 3
STRING_LITERAL (260) 4
SIZEOF (261)
PTR_OP (262) 8
INC_OP (263) 9 12
DEC_OP (264) 10 13
LEFT_OP (265) 22
RIGHT_OP (266) 23
LE_OP (267) 27
GE_OP (268) 28
EQ_OP (269) 30
NE_OP (270) 31
AND_OP (271) 39
OR_OP (272) 41
MUL_ASSIGN (273) 47
DIV_ASSIGN (274) 48
MOD_ASSIGN (275) 49
ADD_ASSIGN (276) 50
SUB_ASSIGN (277) 51
LEFT_ASSIGN (278) 52
RIGHT_ASSIGN (279) 53
AND_ASSIGN (280) 54
XOR_ASSIGN (281) 56
OR_ASSIGN (282) 55
TYPEDEF (283)
EXTERN (284)
STATIC (285)
AUTO (286)
REGISTER (287)
CHAR (288)
SHORT (289)
INT (290)
LONG (291)
SIGNED (292)
UNSIGNED (293)
FLOAT (294)
DOUBLE (295)
CONST (296)
VOLATILE (297)
VOID (298)
STRUCT (299)
UNION (300)
ENUM (301)
ELLIPSIS (302)
CASE (303)
DEFAULT (304)
IF (305)
ELSE (306)
SWITCH (307)
WHILE (308)
DO (309)
FOR (310)
GOTO (311)
CONTINUE (312)
BREAK (313)
RETURN (314)


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
ROOT (80)
    on left: 1, on right: 0
primary_expression (81)
    on left: 2 3 4, on right: 5
postfix_expression (82)
    on left: 5 6 7 8 9 10, on right: 6 7 8 9 10 11
unary_expression (83)
    on left: 11 12 13, on right: 12 13 14 15 16 17 45
multiplicative_expression (84)
    on left: 14 15 16 17, on right: 15 16 17 18 19 20
additive_expression (85)
    on left: 18 19 20, on right: 19 20 21 22 23
shift_expression (86)
    on left: 21 22 23, on right: 22 23 24 25 26 27 28
relational_expression (87)
    on left: 24 25 26 27 28, on right: 25 26 27 28 29 30 31
equality_expression (88)
    on left: 29 30 31, on right: 30 31 32 33
and_expression (89)
    on left: 32 33, on right: 33 34 35
eor_expression (90)
    on left: 34 35, on right: 35 36 37
or_expression (91)
    on left: 36 37, on right: 37 38 39
logical_and_expression (92)
    on left: 38 39, on right: 39 40 41
logical_or_expression (93)
    on left: 40 41, on right: 41 42 43
conditional_expression (94)
    on left: 42 43, on right: 43 44
assignment_expression (95)
    on left: 44 45, on right: 45 57 58
assignment_operator (96)
    on left: 46 47 48 49 50 51 52 53 54 55 56, on right: 45
expression (97)
    on left: 57 58, on right: 43 58 59
this_unit (98)
    on left: 59, on right: 1


State 0

    0 $accept: . ROOT $end

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    ROOT                       go to state 6
    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 9
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 12
    relational_expression      go to state 13
    equality_expression        go to state 14
    and_expression             go to state 15
    eor_expression             go to state 16
    or_expression              go to state 17
    logical_and_expression     go to state 18
    logical_or_expression      go to state 19
    conditional_expression     go to state 20
    assignment_expression      go to state 21
    expression                 go to state 22
    this_unit                  go to state 23


State 1

    2 primary_expression: IDENTIFIER .

    $default  reduce using rule 2 (primary_expression)


State 2

    3 primary_expression: CONSTANT .

    $default  reduce using rule 3 (primary_expression)


State 3

    4 primary_expression: STRING_LITERAL .

    $default  reduce using rule 4 (primary_expression)


State 4

   12 unary_expression: INC_OP . unary_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression  go to state 7
    postfix_expression  go to state 8
    unary_expression    go to state 24


State 5

   13 unary_expression: DEC_OP . unary_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression  go to state 7
    postfix_expression  go to state 8
    unary_expression    go to state 25


State 6

    0 $accept: ROOT . $end

    $end  shift, and go to state 26


State 7

    5 postfix_expression: primary_expression .

    $default  reduce using rule 5 (postfix_expression)


State 8

    6 postfix_expression: postfix_expression . '(' ')'
    7                   | postfix_expression . '.' IDENTIFIER
    8                   | postfix_expression . PTR_OP IDENTIFIER
    9                   | postfix_expression . INC_OP
   10                   | postfix_expression . DEC_OP
   11 unary_expression: postfix_expression .

    PTR_OP  shift, and go to state 27
    INC_OP  shift, and go to state 28
    DEC_OP  shift, and go to state 29
    '('     shift, and go to state 30
    '.'     shift, and go to state 31

    $default  reduce using rule 11 (unary_expression)


State 9

   14 multiplicative_expression: unary_expression .
   45 assignment_expression: unary_expression . assignment_operator assignment_expression

    MUL_ASSIGN    shift, and go to state 32
    DIV_ASSIGN    shift, and go to state 33
    MOD_ASSIGN    shift, and go to state 34
    ADD_ASSIGN    shift, and go to state 35
    SUB_ASSIGN    shift, and go to state 36
    LEFT_ASSIGN   shift, and go to state 37
    RIGHT_ASSIGN  shift, and go to state 38
    AND_ASSIGN    shift, and go to state 39
    XOR_ASSIGN    shift, and go to state 40
    OR_ASSIGN     shift, and go to state 41
    '='           shift, and go to state 42

    $default  reduce using rule 14 (multiplicative_expression)

    assignment_operator  go to state 43


State 10

   15 multiplicative_expression: multiplicative_expression . '*' unary_expression
   16                          | multiplicative_expression . '/' unary_expression
   17                          | multiplicative_expression . '%' unary_expression
   18 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '%'  shift, and go to state 46

    $default  reduce using rule 18 (additive_expression)


State 11

   19 additive_expression: additive_expression . '+' multiplicative_expression
   20                    | additive_expression . '-' multiplicative_expression
   21 shift_expression: additive_expression .

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48

    $default  reduce using rule 21 (shift_expression)


State 12

   22 shift_expression: shift_expression . LEFT_OP additive_expression
   23                 | shift_expression . RIGHT_OP additive_expression
   24 relational_expression: shift_expression .

    LEFT_OP   shift, and go to state 49
    RIGHT_OP  shift, and go to state 50

    $default  reduce using rule 24 (relational_expression)


State 13

   25 relational_expression: relational_expression . '<' shift_expression
   26                      | relational_expression . '>' shift_expression
   27                      | relational_expression . LE_OP shift_expression
   28                      | relational_expression . GE_OP shift_expression
   29 equality_expression: relational_expression .

    LE_OP  shift, and go to state 51
    GE_OP  shift, and go to state 52
    '<'    shift, and go to state 53
    '>'    shift, and go to state 54

    $default  reduce using rule 29 (equality_expression)


State 14

   30 equality_expression: equality_expression . EQ_OP relational_expression
   31                    | equality_expression . NE_OP relational_expression
   32 and_expression: equality_expression .

    EQ_OP  shift, and go to state 55
    NE_OP  shift, and go to state 56

    $default  reduce using rule 32 (and_expression)


State 15

   33 and_expression: and_expression . '&' equality_expression
   34 eor_expression: and_expression .

    '&'  shift, and go to state 57

    $default  reduce using rule 34 (eor_expression)


State 16

   35 eor_expression: eor_expression . '^' and_expression
   36 or_expression: eor_expression .

    '^'  shift, and go to state 58

    $default  reduce using rule 36 (or_expression)


State 17

   37 or_expression: or_expression . '|' eor_expression
   38 logical_and_expression: or_expression .

    '|'  shift, and go to state 59

    $default  reduce using rule 38 (logical_and_expression)


State 18

   39 logical_and_expression: logical_and_expression . AND_OP or_expression
   40 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 60

    $default  reduce using rule 40 (logical_or_expression)


State 19

   41 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   42 conditional_expression: logical_or_expression .
   43                       | logical_or_expression . '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 61
    '?'    shift, and go to state 62

    $default  reduce using rule 42 (conditional_expression)


State 20

   44 assignment_expression: conditional_expression .

    $default  reduce using rule 44 (assignment_expression)


State 21

   57 expression: assignment_expression .

    $default  reduce using rule 57 (expression)


State 22

   58 expression: expression . ',' assignment_expression
   59 this_unit: expression .

    ','  shift, and go to state 63

    $default  reduce using rule 59 (this_unit)


State 23

    1 ROOT: this_unit .

    $default  reduce using rule 1 (ROOT)


State 24

   12 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 12 (unary_expression)


State 25

   13 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 13 (unary_expression)


State 26

    0 $accept: ROOT $end .

    $default  accept


State 27

    8 postfix_expression: postfix_expression PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 64


State 28

    9 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 9 (postfix_expression)


State 29

   10 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 10 (postfix_expression)


State 30

    6 postfix_expression: postfix_expression '(' . ')'

    ')'  shift, and go to state 65


State 31

    7 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 66


State 32

   47 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 47 (assignment_operator)


State 33

   48 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 48 (assignment_operator)


State 34

   49 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 49 (assignment_operator)


State 35

   50 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 50 (assignment_operator)


State 36

   51 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 51 (assignment_operator)


State 37

   52 assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 52 (assignment_operator)


State 38

   53 assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 53 (assignment_operator)


State 39

   54 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 54 (assignment_operator)


State 40

   56 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 56 (assignment_operator)


State 41

   55 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 55 (assignment_operator)


State 42

   46 assignment_operator: '=' .

    $default  reduce using rule 46 (assignment_operator)


State 43

   45 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 9
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 12
    relational_expression      go to state 13
    equality_expression        go to state 14
    and_expression             go to state 15
    eor_expression             go to state 16
    or_expression              go to state 17
    logical_and_expression     go to state 18
    logical_or_expression      go to state 19
    conditional_expression     go to state 20
    assignment_expression      go to state 67


State 44

   15 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression  go to state 7
    postfix_expression  go to state 8
    unary_expression    go to state 68


State 45

   16 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression  go to state 7
    postfix_expression  go to state 8
    unary_expression    go to state 69


State 46

   17 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression  go to state 7
    postfix_expression  go to state 8
    unary_expression    go to state 70


State 47

   19 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 72


State 48

   20 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 73


State 49

   22 shift_expression: shift_expression LEFT_OP . additive_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 74


State 50

   23 shift_expression: shift_expression RIGHT_OP . additive_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 75


State 51

   27 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 76


State 52

   28 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 77


State 53

   25 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 78


State 54

   26 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 79


State 55

   30 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 12
    relational_expression      go to state 80


State 56

   31 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 12
    relational_expression      go to state 81


State 57

   33 and_expression: and_expression '&' . equality_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 12
    relational_expression      go to state 13
    equality_expression        go to state 82


State 58

   35 eor_expression: eor_expression '^' . and_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 12
    relational_expression      go to state 13
    equality_expression        go to state 14
    and_expression             go to state 83


State 59

   37 or_expression: or_expression '|' . eor_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 12
    relational_expression      go to state 13
    equality_expression        go to state 14
    and_expression             go to state 15
    eor_expression             go to state 84


State 60

   39 logical_and_expression: logical_and_expression AND_OP . or_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 12
    relational_expression      go to state 13
    equality_expression        go to state 14
    and_expression             go to state 15
    eor_expression             go to state 16
    or_expression              go to state 85


State 61

   41 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 12
    relational_expression      go to state 13
    equality_expression        go to state 14
    and_expression             go to state 15
    eor_expression             go to state 16
    or_expression              go to state 17
    logical_and_expression     go to state 86


State 62

   43 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 9
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 12
    relational_expression      go to state 13
    equality_expression        go to state 14
    and_expression             go to state 15
    eor_expression             go to state 16
    or_expression              go to state 17
    logical_and_expression     go to state 18
    logical_or_expression      go to state 19
    conditional_expression     go to state 20
    assignment_expression      go to state 21
    expression                 go to state 87


State 63

   58 expression: expression ',' . assignment_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 9
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 12
    relational_expression      go to state 13
    equality_expression        go to state 14
    and_expression             go to state 15
    eor_expression             go to state 16
    or_expression              go to state 17
    logical_and_expression     go to state 18
    logical_or_expression      go to state 19
    conditional_expression     go to state 20
    assignment_expression      go to state 88


State 64

    8 postfix_expression: postfix_expression PTR_OP IDENTIFIER .

    $default  reduce using rule 8 (postfix_expression)


State 65

    6 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 6 (postfix_expression)


State 66

    7 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 7 (postfix_expression)


State 67

   45 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 45 (assignment_expression)


State 68

   15 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 15 (multiplicative_expression)


State 69

   16 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 16 (multiplicative_expression)


State 70

   17 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 17 (multiplicative_expression)


State 71

   14 multiplicative_expression: unary_expression .

    $default  reduce using rule 14 (multiplicative_expression)


State 72

   15 multiplicative_expression: multiplicative_expression . '*' unary_expression
   16                          | multiplicative_expression . '/' unary_expression
   17                          | multiplicative_expression . '%' unary_expression
   19 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '%'  shift, and go to state 46

    $default  reduce using rule 19 (additive_expression)


State 73

   15 multiplicative_expression: multiplicative_expression . '*' unary_expression
   16                          | multiplicative_expression . '/' unary_expression
   17                          | multiplicative_expression . '%' unary_expression
   20 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '%'  shift, and go to state 46

    $default  reduce using rule 20 (additive_expression)


State 74

   19 additive_expression: additive_expression . '+' multiplicative_expression
   20                    | additive_expression . '-' multiplicative_expression
   22 shift_expression: shift_expression LEFT_OP additive_expression .

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48

    $default  reduce using rule 22 (shift_expression)


State 75

   19 additive_expression: additive_expression . '+' multiplicative_expression
   20                    | additive_expression . '-' multiplicative_expression
   23 shift_expression: shift_expression RIGHT_OP additive_expression .

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48

    $default  reduce using rule 23 (shift_expression)


State 76

   22 shift_expression: shift_expression . LEFT_OP additive_expression
   23                 | shift_expression . RIGHT_OP additive_expression
   27 relational_expression: relational_expression LE_OP shift_expression .

    LEFT_OP   shift, and go to state 49
    RIGHT_OP  shift, and go to state 50

    $default  reduce using rule 27 (relational_expression)


State 77

   22 shift_expression: shift_expression . LEFT_OP additive_expression
   23                 | shift_expression . RIGHT_OP additive_expression
   28 relational_expression: relational_expression GE_OP shift_expression .

    LEFT_OP   shift, and go to state 49
    RIGHT_OP  shift, and go to state 50

    $default  reduce using rule 28 (relational_expression)


State 78

   22 shift_expression: shift_expression . LEFT_OP additive_expression
   23                 | shift_expression . RIGHT_OP additive_expression
   25 relational_expression: relational_expression '<' shift_expression .

    LEFT_OP   shift, and go to state 49
    RIGHT_OP  shift, and go to state 50

    $default  reduce using rule 25 (relational_expression)


State 79

   22 shift_expression: shift_expression . LEFT_OP additive_expression
   23                 | shift_expression . RIGHT_OP additive_expression
   26 relational_expression: relational_expression '>' shift_expression .

    LEFT_OP   shift, and go to state 49
    RIGHT_OP  shift, and go to state 50

    $default  reduce using rule 26 (relational_expression)


State 80

   25 relational_expression: relational_expression . '<' shift_expression
   26                      | relational_expression . '>' shift_expression
   27                      | relational_expression . LE_OP shift_expression
   28                      | relational_expression . GE_OP shift_expression
   30 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 51
    GE_OP  shift, and go to state 52
    '<'    shift, and go to state 53
    '>'    shift, and go to state 54

    $default  reduce using rule 30 (equality_expression)


State 81

   25 relational_expression: relational_expression . '<' shift_expression
   26                      | relational_expression . '>' shift_expression
   27                      | relational_expression . LE_OP shift_expression
   28                      | relational_expression . GE_OP shift_expression
   31 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 51
    GE_OP  shift, and go to state 52
    '<'    shift, and go to state 53
    '>'    shift, and go to state 54

    $default  reduce using rule 31 (equality_expression)


State 82

   30 equality_expression: equality_expression . EQ_OP relational_expression
   31                    | equality_expression . NE_OP relational_expression
   33 and_expression: and_expression '&' equality_expression .

    EQ_OP  shift, and go to state 55
    NE_OP  shift, and go to state 56

    $default  reduce using rule 33 (and_expression)


State 83

   33 and_expression: and_expression . '&' equality_expression
   35 eor_expression: eor_expression '^' and_expression .

    '&'  shift, and go to state 57

    $default  reduce using rule 35 (eor_expression)


State 84

   35 eor_expression: eor_expression . '^' and_expression
   37 or_expression: or_expression '|' eor_expression .

    '^'  shift, and go to state 58

    $default  reduce using rule 37 (or_expression)


State 85

   37 or_expression: or_expression . '|' eor_expression
   39 logical_and_expression: logical_and_expression AND_OP or_expression .

    '|'  shift, and go to state 59

    $default  reduce using rule 39 (logical_and_expression)


State 86

   39 logical_and_expression: logical_and_expression . AND_OP or_expression
   41 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 60

    $default  reduce using rule 41 (logical_or_expression)


State 87

   43 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression
   58 expression: expression . ',' assignment_expression

    ':'  shift, and go to state 89
    ','  shift, and go to state 63


State 88

   58 expression: expression ',' assignment_expression .

    $default  reduce using rule 58 (expression)


State 89

   43 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5

    primary_expression         go to state 7
    postfix_expression         go to state 8
    unary_expression           go to state 71
    multiplicative_expression  go to state 10
    additive_expression        go to state 11
    shift_expression           go to state 12
    relational_expression      go to state 13
    equality_expression        go to state 14
    and_expression             go to state 15
    eor_expression             go to state 16
    or_expression              go to state 17
    logical_and_expression     go to state 18
    logical_or_expression      go to state 19
    conditional_expression     go to state 90


State 90

   43 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 43 (conditional_expression)
